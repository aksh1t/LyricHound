// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package webservice;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class AlbumData_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_album_QNAME = new QName("", "album");
    private static final javax.xml.namespace.QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns2_myns2_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_year_QNAME = new QName("", "year");
    private static final javax.xml.namespace.QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer ns2_myns2__int__int_Int_Serializer;
    private static final javax.xml.namespace.QName ns1_amazonLink_QNAME = new QName("", "amazonLink");
    private static final javax.xml.namespace.QName ns1_imgUrl_QNAME = new QName("", "imgUrl");
    private static final javax.xml.namespace.QName ns1_url_QNAME = new QName("", "url");
    private static final javax.xml.namespace.QName ns1_songs_QNAME = new QName("", "songs");
    private static final javax.xml.namespace.QName ns3_ArrayOfstring_TYPE_QNAME = new QName("urn:LyricWiki", "ArrayOfstring");
    private CombinedSerializer ns3_myns3_ArrayOfstring__StringArray_SOAPSerializer1;
    private static final int myALBUM_INDEX = 0;
    private static final int myYEAR_INDEX = 1;
    private static final int myAMAZONLINK_INDEX = 2;
    private static final int myIMGURL_INDEX = 3;
    private static final int myURL_INDEX = 4;
    private static final int mySONGS_INDEX = 5;
    
    public AlbumData_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns2_myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns2_string_TYPE_QNAME);
        ns2_myns2__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, int.class, ns2_int_TYPE_QNAME);
        ns3_myns3_ArrayOfstring__StringArray_SOAPSerializer1 = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String[].class, ns3_ArrayOfstring_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        webservice.AlbumData instance = new webservice.AlbumData();
        webservice.AlbumData_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        for (int i=0; i<6; i++) {
            elementName = reader.getName();
            if (reader.getState() == XMLReader.END) {
                break;
            }
            if (elementName.equals(ns1_album_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_album_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new webservice.AlbumData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myALBUM_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAlbum((java.lang.String)member);
                }
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_year_QNAME)) {
                member = ns2_myns2__int__int_Int_Serializer.deserialize(ns1_year_QNAME, reader, context);
                instance.setYear(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_amazonLink_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_amazonLink_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new webservice.AlbumData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAMAZONLINK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAmazonLink((java.lang.String)member);
                }
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_imgUrl_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_imgUrl_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new webservice.AlbumData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myIMGURL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setImgUrl((java.lang.String)member);
                }
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_url_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_url_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new webservice.AlbumData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myURL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setUrl((java.lang.String)member);
                }
                reader.nextElementContent();
                continue;
            }
            if (elementName.equals(ns1_songs_QNAME)) {
                member = ns3_myns3_ArrayOfstring__StringArray_SOAPSerializer1.deserialize(ns1_songs_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new webservice.AlbumData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySONGS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSongs((java.lang.String[])member);
                }
                reader.nextElementContent();
                continue;
            } else {
                throw new DeserializationException("soap.unexpectedElementName", new Object[] {ns1_songs_QNAME, elementName});
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        webservice.AlbumData instance = (webservice.AlbumData)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        webservice.AlbumData instance = (webservice.AlbumData)obj;
        
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getAlbum(), ns1_album_QNAME, null, writer, context);
        ns2_myns2__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getYear()), ns1_year_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getAmazonLink(), ns1_amazonLink_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getImgUrl(), ns1_imgUrl_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getUrl(), ns1_url_QNAME, null, writer, context);
        ns3_myns3_ArrayOfstring__StringArray_SOAPSerializer1.serialize(instance.getSongs(), ns1_songs_QNAME, null, writer, context);
    }
}
