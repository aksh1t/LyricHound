// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package webservice;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class LyricWiki_SerializerRegistry implements SerializerConstants {
    public LyricWiki_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("urn:LyricWiki", "AlbumResult");
            CombinedSerializer serializer = new webservice.AlbumResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.AlbumResult.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "LyricsResult");
            CombinedSerializer serializer = new webservice.LyricsResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricsResult.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "SongResult");
            CombinedSerializer serializer = new webservice.SongResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.SongResult.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getAlbum");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getAlbum_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getAlbum_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "AlbumData");
            CombinedSerializer serializer = new webservice.AlbumData_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.AlbumData.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postSongResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postSong_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postSong_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getAlbumResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getAlbum_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getAlbum_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getSOTD");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getSOTD_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getSOTD_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getSong");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getSong_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getSong_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getHometown");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getHometown_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getHometown_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "searchArtists");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_searchArtists_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_searchArtists_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "AlbumResultArray");
            QName elemName = new QName("", "item");
            QName elemType = new QName("urn:LyricWiki", "AlbumResult");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING , 
                elemName, elemType, webservice.AlbumResult.class, 1, null, SOAPVersion.SOAP_11);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.AlbumResult[].class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "searchArtistsResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_searchArtists_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_searchArtists_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "searchSongsResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_searchSongs_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_searchSongs_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "TopSong");
            CombinedSerializer serializer = new webservice.TopSong_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.TopSong.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getSOTDResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getSOTD_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getSOTD_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getSongResult");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getSongResult_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getSongResult_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postSong_flags");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postSong_flags_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postSong_flags_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getTopSongs");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getTopSongs_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getTopSongs_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "TopSongsArray");
            QName elemName = new QName("", "item");
            QName elemType = new QName("urn:LyricWiki", "TopSong");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING , 
                elemName, elemType, webservice.TopSong.class, 1, null, SOAPVersion.SOAP_11);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.TopSong[].class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postAlbumResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postAlbum_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postAlbum_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "searchAlbumsResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_searchAlbums_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_searchAlbums_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getTopSongsResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getTopSongs_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getTopSongs_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "checkSongExistsResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_checkSongExists_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_checkSongExists_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getArtistResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getArtist_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getArtist_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "ArrayOfstring");
            QName elemName = new QName("", "item");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING , 
                elemName, SchemaConstants.QNAME_TYPE_STRING, java.lang.String.class, 1, null, SOAPVersion.SOAP_11);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,java.lang.String[].class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postSong");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postSong_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postSong_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getSongResultResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getSongResult_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getSongResult_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postSong_flagsResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postSong_flags_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postSong_flags_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getArtist");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getArtist_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getArtist_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "searchAlbums");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_searchAlbums_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_searchAlbums_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getSongResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getSong_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getSong_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "getHometownResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_getHometown_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_getHometown_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "AlbumDataArray");
            QName elemName = new QName("", "item");
            QName elemType = new QName("urn:LyricWiki", "AlbumData");
            CombinedSerializer serializer = new ObjectArraySerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING , 
                elemName, elemType, webservice.AlbumData.class, 1, null, SOAPVersion.SOAP_11);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.AlbumData[].class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postArtist");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postArtist_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postArtist_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postArtistResponse");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postArtist_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postArtist_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "postAlbum");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_postAlbum_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_postAlbum_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "SOTDResult");
            CombinedSerializer serializer = new webservice.SOTDResult_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.SOTDResult.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "checkSongExists");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_checkSongExists_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_checkSongExists_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("urn:LyricWiki", "searchSongs");
            CombinedSerializer serializer = new webservice.LyricWikiPortType_searchSongs_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,webservice.LyricWikiPortType_searchSongs_RequestStruct.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, java.lang.Class javaType, javax.xml.namespace.QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
